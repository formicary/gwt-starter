apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'

version = '0.0.1'

repositories {
  mavenCentral()
}

configurations {
  gwt
}

List logging = [
    'ch.qos.logback:logback-classic:1.0.0',
    'org.slf4j:jul-to-slf4j:1.6.4',
    'org.slf4j:jcl-over-slf4j:1.6.4',
    'org.slf4j:log4j-over-slf4j:1.6.4'
]

dependencies {
  gwt(
      [group: 'com.google.gwt', name: 'gwt-user', version: '2.4.0'],
      [group: 'com.google.gwt', name: 'gwt-dev', version: '2.4.0']
  )
  compile logging
  compile 'com.google.gwt:gwt-servlet:2.4.0'
  compile 'com.google.inject:guice:3.0'
  compile 'com.google.inject.extensions:guice-servlet:3.0'
  compile 'com.google.inject.extensions:guice-assistedinject:3.0'
  compile 'com.googlecode.mvp4g:mvp4g:1.3.1'
  providedCompile 'javax.servlet:servlet-api:2.5'
  testCompile 'org.testng:testng:6.2'
  testCompile 'org.reflections:reflections:0.9.5'
}

test {
  useTestNG()
}

gwtBuildDir = 'build/war'

task gwtCompile << {
  created = (new File(gwtBuildDir)).mkdirs()
  ant.java(classname: 'com.google.gwt.dev.Compiler', failOnError: 'true', fork: 'true') {
    arg(line: '-war ' + gwtBuildDir)
    arg(line: '-logLevel INFO')
    arg(line: '-style OBF')
    arg(value: 'com.murex.ccportal.CCPortal')
    classpath {
      pathElement(location: file('src/main/java'))
      pathElement(location: file('src/main/resources'))
      pathElement(path: sourceSets.main.output.asPath)
      pathElement(path: configurations.compile.asPath)
      pathElement(path: configurations.gwt.asPath)
    }
  }
}

war.dependsOn gwtCompile

war {
  baseName = 'gwt-sample'
  archiveName = "${baseName}.${extension}"
  from gwtBuildDir

  manifest {
    attributes 'Implementation-Title': 'GWT-Sample'
    attributes 'Implementation-Version': version
    attributes provider: 'gradle'
  }
}
